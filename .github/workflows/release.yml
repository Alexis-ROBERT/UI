name: Release

on:
  push:
    branches:
      - 'release/*'
  pull_request:
    branches:
      - 'release/*'

permissions:
  contents: write

jobs:
  test:
    if: github.event.pull_request.head.ref != 'develop'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Dependencies
        uses: ./.github/actions/setup
        with:
          fontawesome_token: ${{ secrets.FONTAWESOME_TOKEN }}

      - name: Get Token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}

      #      - name: Lint
      #        uses: ./.github/actions/lint
      - name: Unit Test
        uses: ./.github/actions/test
      - uses: andresz1/size-limit-action@v1
        if: github.event_name == 'pull_request'
        with:
          github_token: ${{ steps.app-token.outputs.token }}
      - name: Run Chromatic
        uses: chromaui/action@latest
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
  chromatic:
    if: github.event.pull_request.head.ref == 'develop'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Dependencies
        uses: ./.github/actions/setup
        with:
          fontawesome_token: ${{ secrets.FONTAWESOME_TOKEN }}

      - name: Get Token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}

      - name: Run Chromatic
        uses: chromaui/action@latest
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
  release:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}

      - name: Setup Dependencies
        uses: ./.github/actions/setup
        with:
          fontawesome_token: ${{ secrets.FONTAWESOME_TOKEN }}

      - name: Run Semantic Release for versioning
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
          NODE_ENV: 'production'
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: pnpm dlx semantic-release

      - name: Create Pull Request with version changes
        if: success()
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ steps.app-token.outputs.token }}
          commit-message: "chore(release): update version [skip ci]"
          title: "chore(release): update version from semantic-release"
          body: |
            This PR contains version updates from semantic-release.

            The changes were automatically generated by the semantic-release process.
          branch: semantic-release-version-update
          base: ${{ github.ref_name }}
